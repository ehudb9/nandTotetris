// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var char keyboard;
        let keyboard = Memory.peek(24576);
        if (~(keyboard = 0)) {
            return keyboard;
        }
        else {
            return 0;
        }
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char reader;
        while ((Keyboard.keyPressed() = 0)) {
        }
        let reader = Keyboard.keyPressed();
        while (~(Keyboard.keyPressed() = 0)) {
        }
        do Output.printChar(reader);
        return reader;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var char c;

        let str = String.new(250);
        do Output.printString(message);
        while (true) {
            let c = Keyboard.readChar();
            if ((c = 128) | (c = 129)) {
                if (c = 128) {
                    do Output.backSpace();
                    do Output.println();
                    return str;
                }
                if (c = 129) {
                    do Output.backSpace();
                    do Output.backSpace();
                    do str.eraseLastChar();
                }
            }
            else {
                do str.appendChar(c);
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var int integer;
        var int c;
        var boolean neg;
        var int first_itr;

        let neg = false;
        let first_itr = 0;
        let integer = 0;
        do Output.printString(message);
        while (true) {
            let c = Keyboard.readChar();
            //this if check if its new line or backspace.
            if ((c = 128) | (c = 129)) {
                if (c = 128) {
                    do Output.backSpace();
                    do Output.println();
                    if (neg){
                        return ((-1)*integer);

                    }
                    else {
                        return integer;
                    }
                }
                if (c = 129) {
                    do Output.backSpace();
                    if (first_itr > 0){
                        do Output.backSpace();
                        let integer = integer/10;
                    }
                    let first_itr = first_itr - 1;
                }
            }
            // this if check if its digit or '-' only for the first position.
            if (((c>47) & (c<58)) | (c=45)) {
                if ((first_itr = 0)&(c = 45)) {
                    let neg = true;
                }
                if ((first_itr > 0)&(c = 45)) {
                    do Output.println();
                    if (neg){
                        return ((-1)*integer);

                    }
                    else {
                        return integer;
                    }
                }
                if ((c>47) & (c<58)) {
                    let integer = integer*10 + (c - 48);
                }
            }
            if (~(c=129)) {
                let first_itr = first_itr + 1;
            }
            if (~(((c>47) & (c<58))|(c=45)|(c=129))) {
                do Output.println();
                if (neg){
                    return ((-1)*integer);
                }
                else {
                    return integer;
                }
            }

        }
        return integer;
    }
}
